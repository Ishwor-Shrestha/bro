#!/bin/sh

function init() {
  if [ "$WORKSTATION" = "" ]; then
    export WORKSTATION=$HOME/projects
  fi

  if [ "$BRO_STATION" = "" ]; then
    export BRO_STATION=$HOME/bro
  fi

  mkdir -p `expand $WORKSTATION`
  mkdir -p `expand $BRO_STATION`
}

function expand(){
  echo `sh -c "echo $1"`
}

function error() {
  printf "Yo! $1.\n"
}

function usage() {
  printf "bro <command> <mission>"
}

function launch() {
  project=$1
  project_reference=`expand "$BRO_STATION/$project"`

  # check if the project already exists
  if [ ! -e $project_reference ]; then
    error "the project $1 does not exist.\n Create it with $ bro start $1"
    return 1
  fi

  source $project_reference
}

# starts a project
function start() {

  if [ "$1" = "" ]; then
    read -p "The project name is: " project
  else
    project=$1
  fi

  project_path=`expand "$WORKSTATION/$project"`
  project_reference=`expand "$BRO_STATION/$project"`

  # check if the project already exists
  if [ -e $project_reference ]; then
    error "the project $1 already exists"
    return 1
  fi

  # if this project is fresh
  ## create a script at BRO_STATION which cds to the project directory
  cmd="cd $WORKSTATION/$project"
  echo "#!/bin/sh" > $project_reference
  echo $cmd >> $project_reference
  echo "source .bro" >> $project_reference
  chmod +x $project_reference

  ## create project directory at workstation
  mkdir -p $project_path
  
  if [ ! -e "$project_path/.bro" ]; then
    touch "$project_path/.bro"
  fi
  ## launch the project
  
  source $project_reference
}

function end() {
  project=$1
  project_path=`expand "$WORKSTATION/$project"`
  project_reference=`expand "$BRO_STATION/$project"`

  # check if the project already exists
  if [ ! -e $project_reference ]; then
    error "the project $1 does not exist."
    return 1
  fi

  echo "Yo! are sure you wanna remove $project?"
  echo "This will remove the project directory as well."
  read -p "Do you still wish to continue? (y/n):" confirm

  if [ $confirm = "" ] || [ $confirm = "y" ] || [ $confirm = "Y" ]; then
    rm $project_reference
    rm -rf $project_path
    
    echo "Successfully removed project $project."
    return 0
  else
    echo "Aborting operation for good !!!"
  fi
}

init

function bro() {
  cmd=$1
  project_name=$2
  
  case $1 in
    --help|-h)
      usage
      ;; 
    launch)
      launch $2
      ;;
    start)
      start $2
      ;;
    end)
      end $2
      ;;
    *)
      usage
  esac
}
